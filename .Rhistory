View(mydat)
class(raw_ozone)
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', data.table=F, skip=-1)
View(names_ozone)
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', data.table=F, skip=+1)
View(names_ozone)
names_ozone <- names_ozone[-1,]
View(names_ozone)
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', data.table=F, skip=+1)
View(names_ozone)
names_ozone <- names_ozone[,-1]
View(names_ozone)
names_ozone <- names_ozone[,-1]
names_ozone <- names_ozone[,1]
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', data.table=F, skip=+1)
names_ozone <- names_ozone[,1]
View(names_ozone)
names_ozone <- names_ozone[1]
View(names_ozone)
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', data.table=F, skip=+1)
names_ozone <- names_ozone[1:73,]
View(names_ozone)
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', data.table=F, skip=-2)
View(names_ozone)
names_ozone <- names_ozone[-2]
View(names_ozone)
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', data.table=F, drop=2)
View(names_ozone)
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', header=T,data.table=F, drop=2)
View(names_ozone)
ozone <- rbind(names_ozone,raw_ozone)
raw_ozone <- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.data', data.table=F)
class(raw_ozone)
View(raw_ozone)
rm(list=ls())
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', header=T,data.table=T)
View(names_ozone)
names_ozone <- as.list(names_ozone)
class(names_ozone)
View(names_ozone)
names_ozone <- as.list(names_ozone)
class(names_ozone)
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', header=T,data.table=T, drop=2)
names_ozone <- as.list(names_ozone)
class(names_ozone)
View(names_ozone)
str(names_ozone)
names_ozone <- rbind(names_ozone, “Date” = c(1, 1))
names_ozone <- rbind(names_ozone, “Date”))
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', header=T,data.table=T, drop=2)
names_ozone <- rbind(names_ozone, “Date”))
names_ozone <- rbind(names_ozone, Date))
names_ozone <- rbind(names_ozone, Date=c("Date"))
a < c("Date")
a < "Date"
a < Date
a < a
a <- Date
a <- c("Date")
a
names_ozone <- rbind(names_ozone, a)
a <- as.data.frame(c("Date"))
names_ozone <- rbind(names_ozone, a)
View(names_ozone)
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', header=T,data.table=F, drop=2)
View(names_ozone)
class(names_ozone)
a <- as.data.frame(c("Date"))
names_ozone <- rbind(a, names_ozone)
View(names_ozone)
View(a)
names(a)[1] <- "Date"
View(Date)
View(a)
names_ozone <- rbind(a, names_ozone)
a <- as.data.frame(c("Date"))
names(a)[1] <- "Date:"
names_ozone <- rbind(a,names_ozone)
View(names_ozone)
names_ozone <- t(rbind(a,names_ozone))
View(names_ozone)
names_ozone<- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.names', header=T,data.table=F, drop=2)
a <- as.data.frame(c("Date"))
names(a)[1] <- "Date:"
names_ozone <- t(rbind(a,names_ozone))
View(names_ozone)
ozone <- rbind(names_ozone,raw_ozone)
raw_ozone <- fread('http://www.grappa.univ-lille3.fr/~torre/Recherche/Datasets/downloads/ozone/ozone.data', data.table=F)
ozone <- rbind(names_ozone,raw_ozone)
length(raw_ozone)
length(names_ozone)
View(raw_ozone)
setwd("/Users/benStraub/Desktop/557")
seismic <- read.csv("seismic.csv")
View(seismic)
str(seismic)
data(seismic)
rm(list=ls())
par(mfrow=c(1,1))
# Loading packages into R
library(data.table);library(car);library(lars);library(knitr);library(ISLR);library(leaps);library(glmnet);library(MASS)
setwd("/Users/benStraub/Desktop/557")
seismic <- read.csv("seismic.csv")
data(seismic)
seismic <- read.csv("seismic.csv")
View(seismic)
n=dim(seismic$x)[1]
p=dim(seismic$x)[2]
set.seed(2016)
test=sample(n, round(n/4))
x=seismic$seismoacoustic
n=dim(seismic$x)[1]
p=dim(seismic$x)[2]
n
p
dim(seismic)
str(dim(x(seismic)))
str(dim((seismic))
)
n=dim(seismic)[1]
p=dim(seismic)[2]
n
p
test=sample(n, round(n/4))
View(test)
y=seismic$seismoacoustic
library(data.table);library(car);library(lars);library(knitr);library(ISLR);library(leaps);library(glmnet);library(MASS)
setwd("/Users/benStraub/Desktop/557")
seismic <- read.csv("seismic.csv")
y=seismic$seismoacoustic
View(seismic)
test=sample(n, round(n/4))
y <- seismic$y[-test]
y
y=seismic$seismoacoustic
y
n=dim(seismic)[1]
p=dim(seismic)[2]
set.seed(2016)
test=sample(n, round(n/4))
y <- seismic$y[-test]
y
str(seismic)
seismic <- rename(seismic, c(seismoacoustic="y"))
library(data.table);library(car);library(lars);library(knitr);library(ISLR);library(leaps);library(glmnet);library(MASS);library(reshape)
seismic <- rename(seismic, c(seismoacoustic="y"))
View(seismic)
seismic <- seismic[,-1]
View(seismic)
rm(list=ls())
par(mfrow=c(1,1))
# Loading packages into R
library(data.table);library(car);library(lars);library(knitr);library(ISLR);library(leaps);library(glmnet);library(MASS);library(reshape)
setwd("/Users/benStraub/Desktop/557")
seismic <- read.csv("seismic.csv")
seismic <- seismic[,-1]
seismic <- rename(seismic, c(seismoacoustic="y"))
n=dim(seismic)[1]
p=dim(seismic)[2]
set.seed(2016)
test=sample(n, round(n/4))
y.train <- seismic$y[-test]
X <- seismic[-test,]
X
dat.train <- as.data.frame(cbind(y.train,X.train))
X.train <- seismic[-test,]
dat.train <- as.data.frame(cbind(y.train,X.train))
View(dat.train)
y.test <- diabetes$y[test]
y.test <- seismic$y[test]
X.test <- seismic[test,]
seismic.test <- as.data.frame(cbind(y.test, X.test))
View(seismic.test)
seismic.train <- seismic.train[,-2]
seismic.train <- as.data.frame(cbind(y.train,X.train))
seismic.train <- seismic.train[,-2]
View(seismic.train)
names(seismic)
rm(list=ls())
par(mfrow=c(1,1))
# Loading packages into R
library(data.table);library(car);library(lars);library(knitr);library(ISLR);library(leaps);library(glmnet);library(MASS);library(reshape)
setwd("/Users/benStraub/Desktop/557")
seismic <- read.csv("seismic.csv")
names(seismic)
summary(seismic)
setwd("/Users/benStraub/Desktop/557/Project 2")
seismic <- read.csv("seismic.csv")
rm(list=ls())
par(mfrow=c(1,1))
# Loading packages into R
library(data.table);library(car);library(lars);library(knitr);library(ISLR);library(leaps);library(glmnet);library(MASS);library(reshape)
setwd("/Users/benStraub/Desktop/557/Project 2")
seismic <- read.csv("seismic.csv")
```
```{r, echo=FALSE, warning=FALSE, message=FALSE}
# EDA
names(seismic)
summary(seismic)
```
```{r, echo=FALSE}
### Making nice and pretty
### Dropping seismic for now...maybe should be our focus
seismic <- seismic[,-1]
### Focus on "Seismoacoustic" and renaming to y...so I don't have to type it!!
seismic <- rename(seismic, c(seismoacoustic="y"))
#2584x19 matrix
n=dim(seismic)[1]
p=dim(seismic)[2]
# Setting up
set.seed(2016)
test=sample(n, round(n/4))
### Seperating data into Test and Training Sets
# Train
y.train <- seismic$y[-test]
X.train <- seismic[-test,]
# Test
y.test <- seismic$y[test]
X.test <- seismic[test,]
### Training Data Matrix
seismic.train <- as.data.frame(cbind(y.train,X.train))
seismic.train <- seismic.train[,-2]
### Testing Data Matrix
seismic.test <- as.data.frame(cbind(y.test, X.test))
seismic.test <- seismic.test[,-2]
#View(seismic.train)
View(seismic.train)
rm(list=ls())
par(mfrow=c(1,1))
# Loading packages into R
library(data.table);library(car);library(lars);library(knitr);library(ISLR);library(leaps);library(glmnet);library(MASS);library(reshape)
setwd("/Users/benStraub/Desktop/557/Project 2")
seismic <- read.csv("seismic.csv")
names(seismic)
summary(seismic)
cor(seismic)
str(seismic)
View(seismic)
df <- seismic(a=1:3, d=4:7, c=8, b=9:19)
rm(list=ls())
par(mfrow=c(1,1))
# Loading packages into R
library(data.table);library(car);library(lars);library(knitr);library(ISLR);library(leaps);library(glmnet);library(MASS);library(reshape)
setwd("/Users/benStraub/Desktop/557/Project 2")
seismic <- read.csv("seismic.csv")
names(seismic)
summary(seismic)
df <- seismic(a=1:3, d=4:7, c=8, b=9:19)
df <- data.frame(a=1:3, d=4:7, c=8, b=9:19)
x <- seismic[,-1:3]
x <- seismic([,-1:3])
x <- seismic[c(-1,-2,-3,-19)]
cor(x)
class(seismic)
x <- seismic[c(-1,-2,-3,-8,-19)]
cor(x)
library(corrplot)
library(RColorBrewer)
M <-cor(x)
corrplot(M, type="upper", order="hclust", ol=brewer.pal(n=8, name="RdYlBu")
)
x <- seismic[c(-1,-2,-3,-8,-14,-15,-16,-19)]
library(corrplot)
library(RColorBrewer)
M <-cor(x)
corrplot(M, type="upper", order="hclust", ol=brewer.pal(n=8, name="RdYlBu")
corrplot(M, type="upper", order="hclust", ol=brewer.pal(n=8, name="RdYlBu"))
source("http://www.sthda.com/upload/rquery_cormat.r")
x <- seismic[c(-1,-2,-3,-8,-14,-15,-16,-19)]
require("corrplot")
rquery.cormat(x)
### Testing out Github
rm(list=ls())
par(mfrow=c(1,1))
# Loading packages into R
library(data.table);library(car);library(lars);library(knitr);library(ISLR);library(leaps);library(glmnet);library(MASS);library(reshape)
setwd("/Users/benStraub/Desktop/557/Project 2")
seismic <- read.csv("seismic.csv")
# EDA
names(seismic)
summary(seismic)
# Correlation Plot of the data...7 variables removed
source("http://www.sthda.com/upload/rquery_cormat.r")
x <- seismic[c(-1,-2,-3,-8,-14,-15,-16,-19)]
require("corrplot")
rquery.cormat(x)
### Making nice and pretty
### Dropping seismic for now...maybe should be our focus
seismic <- seismic[,-1]
### Focus on "Seismoacoustic" and renaming to y...so I don't have to type it!!
seismic <- rename(seismic, c(seismoacoustic="y"))
#2584x19 matrix
n=dim(seismic)[1]
p=dim(seismic)[2]
# Setting up
set.seed(2016)
test=sample(n, round(n/4))
### Seperating data into Test and Training Sets
# Train
y.train <- seismic$y[-test]
X.train <- seismic[-test,]
# Test
y.test <- seismic$y[test]
X.test <- seismic[test,]
### Training Data Matrix
seismic.train <- as.data.frame(cbind(y.train,X.train))
seismic.train <- seismic.train[,-2]
### Testing Data Matrix
seismic.test <- as.data.frame(cbind(y.test, X.test))
seismic.test <- seismic.test[,-2]
#View(seismic.train)
#View(seismic.test)
glm.fit=glm(seismic.train∼., data=seismic.train ,family=binomial )
### Making nice and pretty
### Dropping seismic for now...maybe should be our focus
seismic <- seismic[,-1]
### Focus on "Seismoacoustic" and renaming to y...so I don't have to type it!!
seismic <- rename(seismic, c(seismoacoustic="y"))
#2584x19 matrix
n=dim(seismic)[1]
p=dim(seismic)[2]
# Setting up
set.seed(2016)
test=sample(n, round(n/4))
### Seperating data into Test and Training Sets
# Train
y.train <- seismic$y[-test]
X.train <- seismic[-test,]
# Test
y.test <- seismic$y[test]
X.test <- seismic[test,]
### Training Data Matrix
seismic.train <- as.data.frame(cbind(y.train,X.train))
seismic.train <- seismic.train[,-2]
### Testing Data Matrix
seismic.test <- as.data.frame(cbind(y.test, X.test))
seismic.test <- seismic.test[,-2]
#View(seismic.train)
#View(seismic.test)
View(seismic.train)
View(seismic.test)
glm.fit=glm(seismic.train~., data=seismic.train ,family=binomial)
class(seismic.train)
str(seismic.train)
glm.fit=glm(y.train~., data=seismic.train ,family=binomial)
summary(glm.fit)
glm.probs=predict(glm.fit ,type="response ")
glm.probs=predict(glm.fit ,type="response")
glm.probs[1:10]
contrasts(y.train)
contrasts(seismic.train$y.train)
View(seismic)
### Testing out Github
rm(list=ls())
par(mfrow=c(1,1))
# Loading packages into R
library(data.table);library(car);library(lars);library(knitr);library(ISLR);library(leaps);library(glmnet);library(MASS);library(reshape)
setwd("/Users/benStraub/Desktop/557/Project 2")
seismic <- read.csv("seismic.csv")
View(seismic)
### Testing out Github
rm(list=ls())
par(mfrow=c(1,1))
# Loading packages into R
library(data.table);library(car);library(lars);library(knitr);library(ISLR);library(leaps);library(glmnet);library(MASS);library(reshape)
setwd("/Users/benStraub/Desktop/557/Project 2")
seismic <- read.csv("seismic.csv")
# EDA
names(seismic)
summary(seismic)
# Correlation Plot of the data...7 variables removed
source("http://www.sthda.com/upload/rquery_cormat.r")
x <- seismic[c(-1,-2,-3,-8,-14,-15,-16,-19)]
require("corrplot")
rquery.cormat(x)
### Making nice and pretty
### Dropping seismic for now...maybe should be our focus
seismic <- seismic[,-2]
### Focus on "Seismoacoustic" and renaming to y...so I don't have to type it!!
seismic <- rename(seismic, c(seismic="y"))
#2584x19 matrix
n=dim(seismic)[1]
p=dim(seismic)[2]
# Setting up
set.seed(2016)
test=sample(n, round(n/4))
### Seperating data into Test and Training Sets
# Train
y.train <- seismic$y[-test]
X.train <- seismic[-test,]
# Test
y.test <- seismic$y[test]
X.test <- seismic[test,]
### Training Data Matrix
seismic.train <- as.data.frame(cbind(y.train,X.train))
seismic.train <- seismic.train[,-2]
### Testing Data Matrix
seismic.test <- as.data.frame(cbind(y.test, X.test))
seismic.test <- seismic.test[,-2]
View(seismic.train)
View(seismic.test)
glm.fit=glm(y.train~., data=seismic.train ,family=binomial)
summary(glm.fit)
### Making nice and pretty
### Dropping seismic for now...maybe should be our focus
seismic <- seismic[,-2]
### Focus on "Seismoacoustic" and renaming to y...so I don't have to type it!!
seismic <- rename(seismic, c(seismic="y.train"))
#2584x19 matrix
n=dim(seismic)[1]
p=dim(seismic)[2]
# Setting up
set.seed(2016)
test=sample(n, round(n/4))
### Seperating data into Test and Training Sets
# Train
y.train <- seismic$y[-test]
X.train <- seismic[-test,]
# Test
y.test <- seismic$y[test]
X.test <- seismic[test,]
### Training Data Matrix
seismic.train <- as.data.frame(cbind(y.train,X.train))
seismic.train <- seismic.train[,-2]
### Testing Data Matrix
seismic.test <- as.data.frame(cbind(y.test, X.test))
seismic.test <- seismic.test[,-2]
View(seismic.train)
View(seismic.test)
glm.fit=glm(y.train~., data=seismic.train ,family=binomial)
summary(glm.fit)
glm.probs=predict(glm.fit ,type="response")
glm.probs[1:10]
glm.probs
contrasts(seismic.train$y.train)
glm.pred=rep("b",2584)
glm.pred[glm.probs >.5]="b"
table(glm.pred ,y.train)
glm.pred=rep("b",1938)
glm.pred[glm.probs >.5]="b"
table(glm.pred ,y.train)
glm.pred=rep("a",1938)
glm.pred[glm.probs >.5]="b"
table(glm.pred ,y.train)
mean(glm.pred==y.train)
glm.fit=glm(y.test~., data=seismic.test ,family=binomial)
glm.probs=predict(glm.fit ,seismic.test, type=" response ")
glm.probs=predict(glm.fit ,seismic.test, type="response")
glm.probs=predict(glm.fit, seismic.test, type="response")
glm.probs=predict(glm.fit, type="response")
glm.pred=rep("a",646)
glm.pred[glm.probs >.5]="b"
table(glm.pred, y.test)
mean(glm.pred==y.test)
mean(glm.pred==y.train)
table(glm.pred ,y.train)
glm.fit=glm(y.train~., data=seismic.train ,family=binomial)
summary(glm.fit)
glm.probs=predict(glm.fit ,type="response")
glm.probs[1:10]
contrasts(seismic.train$y.train)
glm.pred=rep("a",1938)
glm.pred[glm.probs >.5]="b"
table(glm.pred ,y.train)
table(glm.pred, y.test)
glm.fit=glm(y.test~., data=seismic.test ,family=binomial)
glm.probs=predict(glm.fit, type="response")
glm.pred=rep("a",646)
glm.pred[glm.probs >.5]="b"
table(glm.pred, y.test)
confusion.train <- table(glm.pred ,y.train)
a <- table(glm.pred ,y.train)
glm.pred.train=rep("a",1938)
glm.pred[glm.probs >.5]="b"
table(glm.pred.train ,y.train)
mean(glm.pred.train==y.train)
### Testing Set on Logistic Regression
glm.fit.test=glm(y.test~., data=seismic.test ,family=binomial)
glm.probs=predict(glm.fit, type="response")
glm.fit=glm(y.train~., data=seismic.train ,family=binomial)
summary(glm.fit)
glm.probs=predict(glm.fit ,type="response")
glm.pred=rep("a",1938)
glm.pred[glm.probs >.5]="b"
table(glm.pred ,y.train)
mean(glm.pred==y.train)
table(glm.pred, y.test)
glm.fit=glm(y.test~., data=seismic.test ,family=binomial)
glm.probs=predict(glm.fit, type="response")
glm.pred=rep("a",646)
glm.pred[glm.probs >.5]="b"
table(glm.pred, y.test)
mean(glm.pred==y.test)
summary(glm.fit)
alias(glm.fit)
summary(glm.fit)$coef
summary(glm.fit)$coef[,4]
summary(glm.fit)
rquery.cormat(x)
str(rquery.cormat(x))
rquery.cormat(seismic, type="flatten", graph=FALSE)
rquery.cormat(x, type="flatten", graph=FALSE)
rquery.cormat(x, type="")
rquery.cormat(x)
rquery.cormat(x, type="flatten", graph=FALSE)
rquery.cormat(x, type="flatten")
dim(seismic)
rquery.cormat(x, type="flatten", graphType = "heatmap")
rquery.cormat(x, type="flatten", graphType = "heatmap")
rquery.cormat(x, type="flatten")
glm.fit=glm(y.train~., data=seismic.train ,family=binomial)
summary(glm.fit)
